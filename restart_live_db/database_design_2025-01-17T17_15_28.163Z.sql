CREATE TABLE "users" (
	"id" UUID NOT NULL UNIQUE,
	"username" VARCHAR(30),
	"password" VARCHAR(32),
	"money" DECIMAL(10,2),
	"birthday" DATE,
	"stars" DECIMAL(10,2),
	"used_stars" DECIMAL(10,2),
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"is_delete" BOOLEAN,
	"avatar" VARCHAR(255),
	"level" INTEGER,
	"experience" BIGINT,
	"version" INTEGER,
	"save_money" DECIMAL(10,2),
	PRIMARY KEY("id")
);


CREATE TABLE "current_status" (
	"id" UUID NOT NULL UNIQUE,
	"user_id" UUID,
	"content" VARCHAR(255),
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"is_delete" BOOLEAN,
	"version" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "final_aim" (
	"id" UUID NOT NULL UNIQUE,
	"user_id" UUID,
	"content" VARCHAR(255),
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"is_delete" BOOLEAN,
	"is_finished" BOOLEAN,
	"version" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "review_type" (
	"id" UUID NOT NULL UNIQUE,
	"user_id" UUID,
	"name" VARCHAR(255),
	"sort" INTEGER DEFAULT 10,
	"is_delete" BOOLEAN,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"version" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "review_record" (
	"id" UUID NOT NULL UNIQUE,
	"user_id" UUID,
	"rt_id" UUID,
	"is_delete" BOOLEAN,
	"content" TEXT,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"version" INTEGER,
	PRIMARY KEY("id")
);

COMMENT ON TABLE "review_record" IS '复盘记录';


CREATE TABLE "review_record_comment" (
	"id" UUID NOT NULL UNIQUE,
	"user_id" UUID,
	"username" VARCHAR(255),
	"comment" TEXT,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"is_delete" BOOLEAN,
	"rr_id" UUID,
	"file_type" VARCHAR(20),
	"file_url" VARCHAR(255),
	"version" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "tasks" (
	"id" UUID NOT NULL UNIQUE,
	"user_id" UUID,
	"type" SMALLINT,
	"content" VARCHAR(255),
	"is_finished" BOOLEAN,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"finish_time" TIMESTAMP,
	"remark" TEXT,
	"starts" DECIMAL(10,2),
	"experience" INTEGER,
	"version" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "tasks_index" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"t_id" UUID,
	"starts" INTEGER,
	"content" VARCHAR(255),
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"is_delete" BOOLEAN,
	"is_finish" BOOLEAN,
	"finish_time" TIMESTAMP,
	"experience" INTEGER,
	"version" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "tasks_comment" (
	"id" UUID NOT NULL UNIQUE,
	"user_id" UUID,
	"username" VARCHAR(255),
	"comment" TEXT,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"t_id" UUID,
	"file_type" VARCHAR(20),
	"file_url" VARCHAR(255),
	"is_delete" BOOLEAN,
	"version" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "award_shop" (
	"id" UUID NOT NULL UNIQUE,
	"user_id" UUID,
	"name" VARCHAR(255),
	"introduce" TEXT,
	"cover_img" VARCHAR(255),
	"num" INTEGER,
	"is_delete" BOOLEAN,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"starts" INTEGER,
	"version" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "exchange_record" (
	"id" UUID NOT NULL UNIQUE,
	"as_id" UUID,
	"user_id" UUID,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"is_delete" BOOLEAN,
	"stars" INTEGER,
	"as_name" VARCHAR(255),
	"as_cover_url" VARCHAR(255),
	"as_introduce" TEXT,
	"version" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "life_list" (
	"id" UUID NOT NULL UNIQUE,
	"user_id" UUID,
	"content" VARCHAR(255),
	"is_delete" BOOLEAN,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"is_finish" BOOLEAN,
	"version" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "runtime_task" (
	"id" UUID NOT NULL UNIQUE,
	"name" VARCHAR(255),
	"remark" TEXT,
	"stars" DECIMAL(10,2),
	"belonging_time" TIMESTAMP,
	"is_finish" BOOLEAN,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"version" INTEGER,
	"uid" UUID,
	"is_delete" BOOLEAN,
	"create_way" INTEGER,
	"external_id" VARCHAR(255),
	PRIMARY KEY("id")
);


CREATE TABLE "runtime_task_template" (
	"id" UUID NOT NULL UNIQUE,
	"uid" UUID,
	"name" VARCHAR(255),
	"version" INTEGER,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"remark" TEXT,
	"stars" DECIMAL(10,2),
	"belonging_time" VARCHAR(255),
	"is_delete" BOOLEAN,
	"version" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "runtime_task_engine" (
	"id" UUID NOT NULL UNIQUE,
	"uid" UUID,
	"is_delete" TIMESTAMP,
	"rtt_id" UUID,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"version" INTEGER,
	"belonging_time_way" INTEGER,
	"belonging_time_str" VARCHAR(255),
	PRIMARY KEY("id")
);


CREATE TABLE "projects" (
	"id" UUID NOT NULL UNIQUE,
	"uid" UUID,
	"name" VARCHAR(255),
	"introduce" TEXT,
	"is_finish" BOOLEAN,
	"is_delete" BOOLEAN,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"version" INTEGER,
	"stars" DECIMAL(10,2),
	"belonging_time" TIMESTAMP,
	"start_time" TIMESTAMP,
	PRIMARY KEY("id")
);


CREATE TABLE "modules" (
	"id" UUID NOT NULL UNIQUE,
	"pid" UUID,
	"last_id" UUID,
	"name" VARCHAR(255),
	"introduce" TEXT,
	"is_finish" BOOLEAN,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"is_delete" BOOLEAN,
	"version" INTEGER,
	"stars" DECIMAL(10,2),
	"belonging_time" TIMESTAMP,
	"start_time" TIMESTAMP,
	"modueles_type" INTEGER,
	PRIMARY KEY("id")
);


CREATE TABLE "income_tag" (
	"id" UUID NOT NULL UNIQUE,
	"name" VARCHAR(255),
	"user_id" UUID,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"version" INTEGER,
	"is_delete" BOOLEAN,
	PRIMARY KEY("id")
);


CREATE TABLE "expenditure_tag" (
	"id" UUID NOT NULL UNIQUE,
	"name" VARCHAR(255),
	"user_id" UUID,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"version" INTEGER,
	"is_delete" BOOLEAN,
	PRIMARY KEY("id")
);


CREATE TABLE "money_pay_record" (
	"id" UUID NOT NULL UNIQUE,
	"create_time" TIMESTAMP,
	"update_time" TIMESTAMP,
	"is_delete" BOOLEAN,
	"version" INTEGER,
	"tag_ids" VARCHAR(2000),
	"way" INTEGER,
	"user_id" UUID,
	"name" VARCHAR(255),
	"remark" TEXT,
	PRIMARY KEY("id")
);


ALTER TABLE "current_status"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "final_aim"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "review_type"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "review_record"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "review_record"
ADD FOREIGN KEY("rt_id") REFERENCES "review_type"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "review_record_comment"
ADD FOREIGN KEY("rr_id") REFERENCES "review_record"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "review_record_comment"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "tasks"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "tasks_index"
ADD FOREIGN KEY("t_id") REFERENCES "tasks"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "tasks_comment"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "tasks_comment"
ADD FOREIGN KEY("t_id") REFERENCES "tasks"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "award_shop"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "exchange_record"
ADD FOREIGN KEY("as_id") REFERENCES "award_shop"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "exchange_record"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "life_list"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "runtime_task"
ADD FOREIGN KEY("uid") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "runtime_task_template"
ADD FOREIGN KEY("uid") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "runtime_task_engine"
ADD FOREIGN KEY("uid") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "runtime_task_engine"
ADD FOREIGN KEY("rtt_id") REFERENCES "runtime_task_template"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "projects"
ADD FOREIGN KEY("uid") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "modules"
ADD FOREIGN KEY("pid") REFERENCES "projects"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "income_tag"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "expenditure_tag"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "money_pay_record"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;